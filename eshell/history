cd ..
cd
cd .config/waybar/
cd
pwd]
pwd
cd DCIM
cd content
cd
cd DCIM/content
cd
cd 
quit
cd DCIM/content
cd
cd .config/waybar/
cd .config/
cd
git status
cd .config/
cd
cd DCIM/content
cd
cd bin
pwd
cd ..
cd bin
cd
cd bin
cd
cd bin
cd
pwd
cd DCIM/content
ls -al
cd
cd 
env
cd
find . -iregex * -exec grep -i WVKBD_LANDSCAPE_HEIGHT {} +
find . -iregex "*" -exec grep -i WVKBD_LANDSCAPE_HEIGHT {} +
cpu-speed.sh
do_backup
pandoc tmp.md tmp.org
pandoc -s tmp.md -o tmp.org
getent passwd $USER
getent passwd $USER  cut -d: -f7
getent passwd $USER  cut -d':' -f7
getent passwd $USER | cut -d: -f7
groups jdyer | grep -q '\binput\b'
groups jdyer
groups jdyer | grep -q 'input'
groups jdyer | grep'\binput\b'
groups jdyer | grep '\binput\b'
pacman -Qi cronie
systemctl list-unit-files --type=service
systemctl list-unit-files --type=service | grep -qw 'cronie.service'
systemctl list-unit-files --type=service | grep -w 'cronie.service'
systemctl is-active --quiet cronie
systemctl is-active cronie
pwd
yay -Rns cronie
jd_install.sh --remove
neofetch
ln -s waybar_garuda waybar
rm waybar
mkdir Home
rmdir Home
cd
mkdir -p bin/Home/bin
mkdir -p Home/bin
bin/test.sh
jd_install.sh
fuzzel --help
setxkbmap gb
croc --code jdjdjdjd hugo
cro --code jdjdjdjd send hugo
croc --code jdjdjdjd hugo
croc send --code jdjdjdjd hugo
xkbcomp ~/.config/keymap_sway.xkb $DISPLAY
automake
cd ..
l#
./configure
cd examples/
cd CigiMiniHost/
cd ..
cd tinyxml/
./xmltest
cd ..
cd CigiMiniHost/
cd ..
cd CigiDummyIG/
cd ../CigiMiniHost/
cd ..
make install
sudo make install
pwd
cd examples_001/
cd ..
cd examples
cd CigiMiniHost/
cd ..
pkg-config --cflags cigicl
echo $PKG_CONFIG_PATH
export PKG_CONFIG_PATH=cigicl.pc
echo $PKG_CONFIG_PATH
pkg-config --cflags cigicl
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
echo $PKG_CONFIG_PATH
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
echo $PKG_CONFIG_PATH
pkg-config --cflags cigicl
cd CigiMiniHost/
export LD_LIBRARY_PATH=/usr/local/lib
which gdb
yay -S gdb
make clean
rm -fr ccl_4_0/
rm -f ccl_4_0.tar.gz
cd
cd examples
tar zcf ccl_4_0.tar.gz ccl_4_0
tar zcf ccl_4_0-linux.tar.gz ccl_4_0-linux
tar zcf ccl_4_0-windows.tar.gz ccl_4_0-windows
MusicSync.sh
art-sync.sh out
cd ..
rm -fr Photos/
lpadmin -p Epson -v gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
sudo lpadmin -p Epson_1500W -m gutenprint/5.3/Global/stp-escp2-1400.5.3.sim.ppd
lpinfo -v
sudo lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362
my-sync.sh
my-sync.sh --music
mysync 
mysync --art
mysync --art in
mysync --photos        
mysync --photos
music_cover_art.sh
using lpadmin on a linux machine how would I install and enable a usb printer for Epson Stylus Photo 1410
lsusb
lpadmin -p Epson_1500W -m /usr/share/cups/model/gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
lpadmin -p Epson_1500W -m /home/jdyer/Downloads/stp-escp2-1410.5.3.sim.ppd
lpinfo -v
lpadmin -p Epson -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m /home/jdyer/Downloads/stp-escp2-1410.5.3.sim.ppd
lpadmin -p Epson -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m stp-escp2-1410.5.3.sim.ppd
pwd
cd Downloads/
jd_install.sh
lpadmin -p Epson -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m stp-escp2-1410.5.3.sim.ppd
lpadmin -p Epson -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m everywhere
lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m /usr/share/cups/model/gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
sudo lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m /usr/share/cups/model/gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
sudo lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m ~/Downloads/stp-escp2-1410.5.3.sim.ppd
ls /usr/share/cups/model/gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
gunzip -k /usr/share/cups/model/gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
gunzip -k stp-escp2-1410.5.3.sim.ppd.gz
sudo lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m ~/Downloads/stp-escp2-1410.5.3.sim.ppd
sudo lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m ~/Downloads/stp-escp2-1410.5.3.sim.ppd.gz
sudo lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m /usr/share/cups/model/gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd
lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m /home/jdyer/Downloads/stp-escp2-1410.5.3.sim.ppd
lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m /home/jdyer/Downloads/stp-escp2-1410.5.3.sim.ppd
lpadmin -p Epson_1500W -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
lpadmin -p Epson_1500W -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
lpadmin -p Epson -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz                                                                                                                                                                                                                                                                                                                          
lpstat -v
lpinfo -v
sudo lpadmin -x Epson_1500W
sudo lpadmin -x Epson
lpinfo -v
lpstat -m
lpinfo -m
echo $LANG
locale
sudo btrfs-assistant
cd build
make clean
mkdir build
cd build
cd ..
cd examples
cd CigiMiniHost/
mkdir build
cd build
cd ..
cd tinyxml/
mkdir build
cd build
cd ..
cd CigiMiniHost/
cd build
cd ../..
cd CigiDummyIG/
mkdir build
cd build
./CigiDummyIG
web update dyerdwelling
web update emacs
mkdir build
cd build
make
man swig#
man swig
mkdir build
cd build
make
./Example
cd ..
swig -csharp -c++ example.i
screen-record.sh
pkill -signal SIGINT wl-screenrec
pkill --signal SIGINT wl-screenrec
mysync --art out
which python
python --version
pwd
cd source
cd test
cd python/
python value_input_dialog.py
pyinstaller
yay -S pyinstaller
pyinstaller --onefile value_input_dialog.py
cd dist
./value_input_dialog
./gen_cigi_i.sh
cmake .
mkdir build
cmake .
mkdir build
cd build
cmake .
cd ..
rm -fr build
cmake -B build
lpinfo -m
tag_info.sh
cmake --help-policy CMP0078
dotnet new console -o MyProject
dotnet run
cd MyProject/
dotnet run
rm -fr build
cmake --build build
rsync -avP cigi-ccl_4_0/ /home/jdyer/source/repos/cigi-ccl_4_0/
udisksctl status
mount | grep /dev/sdX
mount
mount | grep /dev/sd
udisksctl status
udisksctl info -b /dev/sda
udisksctl info -b /dev/mmcblk0
udisksctl info -b /dev/nvme0n1
udisksctl status
udisksctl info -b /dev/sda
udisksctl mount -b /dev/sda1
pkill --signal SIGUSR1 waybar
pkill -SIGUSR1 waybar
waybar-update
etags --append aws.cpp -o TAGS
etags --append aws.cpp -o ~/source/test/cpp/TAGS
mysync --photos in
images.sh
mysync --photos out
sudo lpadmin -p Epson_1500W -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
sudo lpadmin -p Epson_1500W -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
lpstat -R
lprm
lpstat -R
lpstat -o
cancel 11896832
lpstat -o
cancel Epson_1500W-12
lpstat -o
cancel Epson_1500W-13
lpstat -o
sudo lpadmin -p Epson_1500W -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
lpstat -p
which test.sh
cd
test.sh
ln -s waybar_jdyer waybar
lpinfo -v
lpinfo -m
lpinfo -v
sudo lpadmin -p Epson_1500W -E -v usb://EPSON/Stylus%20Photo%201500?serial=4E4152593031383362 -m gutenprint/5.3/Global/stp-escp2-1410.5.3.sim.ppd.gz
cmake
cmake --build build
pwd
mkdir build
cd build
pwd
cmake ..
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='gt(scene,0.1)',setpts=N/FRAME_RATE/TB" -vsync vfr output.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='gt(scene,0.9)',setpts=N/FRAME_RATE/TB" -vsync vfr output.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='gt(scene,0.2)',setpts=N/FRAME_RATE/TB" -vsync vfr output.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='gt(scene,0.4)',setpts=N/FRAME_RATE/TB" -vsync vfr output.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='gt(scene,0.05)',setpts=N/FRAME_RATE/TB" -vsync vfr output.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.05)',setpts=N/FRAME_RATE/TB" -vsync vfr output.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.1)',setpts=N/FRAME_RATE/TB" -vsync vfr output2.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.3)',setpts=N/FRAME_RATE/TB" -vsync vfr output_0_3.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.2)',setpts=N/FRAME_RATE/TB" -vsync vfr output_0_2.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.1)',setpts=N/FRAME_RATE/TB" -vsync vfr output_0_1.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.05)',setpts=N/FRAME_RATE/TB" -vsync vfr output_0_0_5.mp4
ffmpeg -i 2024-06-23-art-videos--TimeLapseDeerEvie.mp4 -vf "select='lt(scene,0.01)',setpts=N/FRAME_RATE/TB" -vsync vfr output_0_0_1.mp4
ffmpeg -i output_0_0_5.mp4 -vf "select='lt(scene,0.05)',setpts=N/FRAME_RATE/TB" -vsync vfr output_0_0_5_0_0_5.mp4
grep 'installed' /var/log/pacman.log | tail
cd ..
cd build
cd ..
rm -fr build
mkdir build
cd build
cmake ..
cd ..
cmake --build build
cmake -j0 --build build
cmake -j8 --build build
cmake -j 8 --build build
cmake --build build
cmake --build build -- -j 8
rm -fr build
cmake -S . -B build
swig --help
cd ..
./swig-generate-source-csharp-linux.sh
install_remote.sh
cd swig/scripts/
./swig-generate-source-csharp-linux.sh
cd ..
pwd
cd ..
rsync -avP --delete --exclude '.git' cigi-ccl_4_0/ /home/jdyer/source/repos/cigi-ccl_4_0/
ps -ef | grep -i remap
setxkbmap gb
xkbcomp $DISPLAY -xkb - | ~/.config/keymap_default.xkb
xkbcomp $DISPLAY -xkb -
xkbcomp $DISPLAY -xkb - > ~/.config/keymap_default.xkb
swaymsg -t get_tree | jq '.. | .app_id? | select(. != null)'
cpu-speed.sh
emacs_pkgs_update.sh
pwd
rm -fr emacs-pkgs/
emacs_pkgs_update.sh
cmake --list-build-presets
cmake --list-presets build
cmake --list-presets --json build
cmake --list-presets build
cmake --help
cmake -S . -B build -G "Unix Makefiles"
rsync -avP cigi-ccl_4_0/ /home/jdyer/source/repos/cigi-ccl_4_0/
rsync -avP --delete cigi-ccl_4_0/ /home/jdyer/source/repos/cigi-ccl_4_0/
rsync -avP --delete --exclude='.git' cigi-ccl_4_0/ /home/jdyer/source/repos/cigi-ccl_4_0/
permissions-git.sh
rm emacs-30.0-2024-07-26.zip 
l
./CigiMiniHost
cmake --list-presets
cmake --install linux-debug
cmake --install --preset linux-debug
which ffplay
which mplayer
sudo pacman -S mplayer
cmake --version
rm *.mkv
which diff3
which vimdiff
which svn
cd
cd source
l
cd repos
l
mkdir subversion
svnadmin create subversion/my_project
cd ..
cd arscript-mode/
l
svn import . file:////home/jdyer/source/repos/subversion/my_project -m "Initial import"
pwd
cd ..
l
mkdir working
cd working
svn checkout ../repos/subversion/my_project/ my_project
svn checkout file:////home/jdyer/source/repos/subversion/my_project/ my_project
svnserve -d -r /home/jdyer/source/working
mysync --music
which pywal
which wal
wal --help
wal -i /home/jdyer/.last_wallpaper.jp
wal -i /home/jdyer/.last_wallpaper.jpg
man wal
wal --help
wal -ic /home/jdyer/.last_wallpaper.jpg
wal -c
wal -i /home/jdyer/.last_wallpaper.jpg
wal -c
wal -i /home/jdyer/.last_wallpaper.jpg
wal -c -i /home/jdyer/.last_wallpaper.jpg
wal -c
wal -i /home/jdyer/.last_wallpaper.jpg
wal -i /home/jdyer/.last_wallpaper.jpg -q -n
wal -i /home/jdyer/.last_wallpaper.jpg -q
wal -i /home/jdyer/.last_wallpaper.jpg
install_latest.sh
swww init
sww-daemon
swww-daemon
ps -ef | grep -i swww
swww-daemon &
ps -ef | grep -i connect
ps -ef | grep -i auto
ps -ef | grep -i autotil
ps -ef | grep -i ydo
ps -ef | grep -i dunst
wallpaper_change.sh
su -
mysync --music
cd
mysync --music
ps -ef | grep -i blue
exit
which pandoc
cd
pandoc -s tmp.html -o tmp.org
ps -ef | grep -i kmonad
ps -ef | grep -i blue
sudo systemctl enable bluetooth
sudo systemctl start bluetooth
ps -ef | grep -i blue
systemctl status bluetooth
cd ..
cd
cd source
cd repos
cd emacs
cd ..
git clone https://git.savannah.gnu.org/git/emacs.git
cd emacs
makepkg -siC
exit
exit 
l
ffmpeg -i 20240831094425--screen-recording.mkv 20240831094425--screen-recording.gif
ffmpeg 20240831094819--screen-recording.mkv 20240831094819--screen-recording.gif
ffmpeg -i 20240831094819--screen-recording.mkv tmp.gif
swaymsg client.focused "#ffffff" "#ffffff" "#ffffff" "#ffffff" "#ffffff"
cmp byteswapping byteswapping-cmake/
diff byteswapping byteswapping-cmake/
diff -ru byteswapping byteswapping-cmake/
diff -ruy byteswapping byteswapping-cmake/
diff -ry byteswapping byteswapping-cmake/
diff -ry byteswapping byteswapping-cmake/ | colordiff
rsync -av --dry-run byteswapping byteswapping-cmake
comm byteswapping byteswapping-cmake
fdupes -r byteswapping byteswapping-cmake
kompare
kompare byteswapping byteswapping-cmake
ediff-directories byteswapping byteswapping-cmake
g++ my_cpp_function.cpp -fdump-ada-spec-slim
g++ my_cpp_function.cpp -fdump-ada-spec
gprbuild
gprbuild -P
gprbuild -P Project.gpr
gprbuild -P
gprbuild
g++ -c my_cpp_function.cpp
gprbuild
./main
gprclean
g++ my_cpp_function.cpp -fdump-ada-spec
g++ -c my_cpp_function.cpp -fdump-ada-spec
gprbuild
./main
gprclean
g++ -c my_cpp_function.cpp -fdump-ada-spec
gprbuild
./main
mysync --music
mysync --music out
mysync --music
mkdir build
cd build
cmake ..
cmake -S . -B build
cd ..
cmake -S . -B build
update_all.sh
tidy_up_dir
cd ..
cd 202408
tidy_up_dir
cd ..
cd 202407
tidy_up_dir
cd ..
cd 202406
tidy_up_dir
images.sh
images_cat.sh
images.sh
tagged_validate_dir
images_cat.sh
mysync --photos out
rsync -rltsiPv --no-g --copy-links--size-only --modify-window=4 $HOME/DCIM/Camera/ $HOME/nas/Evie/Camera/
rsync -rltsiPv --no-g --copy-links --size-only --modify-window=4 $HOME/DCIM/Camera/ $HOME/nas/Evie/Camera/
man pcmanfm
swaymsg -t get_tree
ps -ef | grep -i gamma
man recoll
recoll --help
generate_desktop_files.sh
echo $BROWSER
su -
locate firefox.desktop
locate xournalpp.desktop
locate xournal.desktop
locate firefox.desktop
rofi --dump-config
rofi -dump-config
rm -fr Documents/
rm -fr examples/
rm -fr house/
rm -fr Samples
rm -f Samples.zip
rm -fr .Trash-1000/
proselint
PictureToCapture
locate emacs.desktop
window_title.sh
languagetool
which languagetool
ps -ef | grep -i language
rm -fr elpa
rm -fr eln-cache/
